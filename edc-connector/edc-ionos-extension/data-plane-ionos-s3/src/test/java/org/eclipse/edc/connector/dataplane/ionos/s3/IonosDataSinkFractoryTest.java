/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package org.eclipse.edc.connector.dataplane.ionos.s3;

import com.ionos.edc.extension.s3.schema.IonosBucketSchema;
import org.eclipse.edc.connector.dataplane.spi.pipeline.PipelineService;
import org.eclipse.edc.spi.types.domain.DataAddress;
import org.eclipse.edc.spi.types.domain.transfer.DataFlowRequest;
import org.junit.jupiter.api.Test;


import static org.assertj.core.api.Assertions.assertThat;

import java.util.UUID;



class IonosDataSinkFractoryTest {

    @Test
    void shouldProvidePipelineServices(PipelineService pipelineService) {
        var request = DataFlowRequest.Builder.newInstance().processId(UUID.randomUUID().toString())
                .sourceDataAddress(getDataAddress("company-1")).destinationDataAddress(getDataAddress("company-2"))
                .build();
        System.out.println("IonosDataSinkFractoryTest");
        var result = pipelineService.validate(request);

        assertThat(result.succeeded()).isTrue();
    }

    private DataAddress getDataAddress(String bucketName) {
        return DataAddress.Builder.newInstance().type(IonosBucketSchema.TYPE).keyName("111")
                .property(IonosBucketSchema.BUCKET_NAME, bucketName)
                .property(IonosBucketSchema.STORAGE_NAME, "s3-eu-central-1.ionos.com").build();
    }

}
