---
apiVersion: kuttl.dev/v1beta1
kind: TestStep
metadata:
  name: install-edc
timeout: 300
---
apiVersion: edc.stackable.tech/v1alpha1
kind: EDCCluster
metadata:
  name: consumer
spec:
  image:
    custom: docker.stackable.tech/stackable-experimental/edc:{{ test_scenario['values']['edc']}}
    productVersion: 0.0.1
    pullPolicy: IfNotPresent
  clusterConfig:
    listenerClass: external-unstable
    certSecret: connector-cert
    ionos:
      tokenSecret: ionos-token
      s3:
        reference: destination-bucket
  connectors:
    envOverrides:
      COMMON_VAR: role-value # overridden by role group below
      ROLE_VAR: role-value   # only defined here at role level
    configOverrides:
      config.properties:
        edc.vault.name: role-override
    roleGroups:
      envOverrides:
        COMMON_VAR: group-value # overrides role value
        GROUP_VAR: group-value # only defined here at group level
      default:
        replicas: 1
---
apiVersion: v1
kind: Secret
metadata:
  name: ionos-token
stringData:
  EDC_IONOS_TOKEN: AValidTokenShouldGoHere
---
apiVersion: secrets.stackable.tech/v1alpha1
kind: SecretClass
metadata:
  name: s3-credentials-class
spec:
  backend:
    k8sSearch:
      searchNamespace:
        pod: {}
---
apiVersion: v1
kind: Secret
metadata:
  name: s3-credentials
  labels:
    secrets.stackable.tech/class: s3-credentials-class
stringData:
  accessKey: accessKeyHere
  secretKey: secretKeyHereThatBelongsToTheAccesskey
---
apiVersion: s3.stackable.tech/v1alpha1
kind: S3Bucket
metadata:
  name: destination-bucket
spec:
  bucketName: destination-bucket
  connection:
    inline:
      host: s3-eu-central-1.ionoscloud.com
      port: 443
      tls:
        verification:
          server:
            caCert:
              webPki: {}
      credentials:
        secretClass: s3-credentials-class
